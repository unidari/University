{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOljfm4JIkEQvl0I8IJUfdK",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/unidari/University/blob/main/Ex_Tasks/Ex_task_2.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "dZ6wf4DWyCax",
        "outputId": "0086929f-c3b3-4d7b-ed47-9b3bf4c2d62e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1. Добавить контакт\n",
            "2. Удалить контакт\n",
            "3. Показать контакты\n",
            "4. Изменить номер\n",
            "5. Выход\n",
            "\n",
            "Выберите опцию: даша\n",
            "1. Добавить контакт\n",
            "2. Удалить контакт\n",
            "3. Показать контакты\n",
            "4. Изменить номер\n",
            "5. Выход\n",
            "\n",
            "Выберите опцию: 8574169855432586665266565д\n",
            "1. Добавить контакт\n",
            "2. Удалить контакт\n",
            "3. Показать контакты\n",
            "4. Изменить номер\n",
            "5. Выход\n",
            "\n",
            "Выберите опцию: 3\n",
            "Контактов нет\n",
            "1. Добавить контакт\n",
            "2. Удалить контакт\n",
            "3. Показать контакты\n",
            "4. Изменить номер\n",
            "5. Выход\n",
            "\n",
            "Выберите опцию: 1\n",
            "Введите имядаша\n",
            "Введите телефон9856745851236589975врао\n",
            "1. Добавить контакт\n",
            "2. Удалить контакт\n",
            "3. Показать контакты\n",
            "4. Изменить номер\n",
            "5. Выход\n",
            "\n",
            "Выберите опцию: 3\n",
            "Даша +79856745851236589975врао\n",
            "1. Добавить контакт\n",
            "2. Удалить контакт\n",
            "3. Показать контакты\n",
            "4. Изменить номер\n",
            "5. Выход\n",
            "\n",
            "Выберите опцию: 1\n",
            "Введите имя Данчик\n",
            "Введите телефон5\n",
            "1. Добавить контакт\n",
            "2. Удалить контакт\n",
            "3. Показать контакты\n",
            "4. Изменить номер\n",
            "5. Выход\n",
            "\n",
            "Выберите опцию: 1\n",
            "Введите имя8ргоого\n",
            "Введите телефоноошошо\n",
            "1. Добавить контакт\n",
            "2. Удалить контакт\n",
            "3. Показать контакты\n",
            "4. Изменить номер\n",
            "5. Выход\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "Interrupted by user",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-15-732a522d0fac>\u001b[0m in \u001b[0;36m<cell line: 43>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     43\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'\\n'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"1. Добавить контакт\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"2. Удалить контакт\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"3. Показать контакты\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"4. Изменить номер\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"5. Выход\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 45\u001b[0;31m     \u001b[0moption\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\nВыберите опцию: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     46\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     47\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0moption\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misdigit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"
          ]
        }
      ],
      "source": [
        "contact = {}\n",
        "\n",
        "def edit(name: str, phone: str) -> dict:\n",
        "    if name not in contact:\n",
        "      print('Контакта нет')\n",
        "      return contact\n",
        "\n",
        "    sname = replace_name(name)\n",
        "    sphone = replace_phone(phone)\n",
        "\n",
        "    contact[sname] = sphone\n",
        "    return contact\n",
        "\n",
        "def add(name: str, phone: str):\n",
        "    name = replace_name(name)\n",
        "    phone = replace_phone(phone)\n",
        "    contact[name] = phone\n",
        "\n",
        "def delete_contact(name: str):\n",
        "    del contact[name]\n",
        "\n",
        "def view():\n",
        "    if len(contact) == 0:\n",
        "        print(\"Контактов нет\")\n",
        "        pass\n",
        "\n",
        "    for user in contact.items():\n",
        "        print(' '.join(user))\n",
        "\n",
        "\n",
        "def replace_name(name: str) -> str:\n",
        "    return name.capitalize()\n",
        "\n",
        "def replace_phone(phone: str) -> str:\n",
        "    if len(phone) < 10: return \"Неправильный номер\"\n",
        "\n",
        "    if len(phone) == 11:\n",
        "        return phone.replace(phone[0], '+7', 1)\n",
        "\n",
        "    return '+7' + phone\n",
        "\n",
        "\n",
        "while True:\n",
        "    print('\\n'.join([\"1. Добавить контакт\", \"2. Удалить контакт\", \"3. Показать контакты\", \"4. Изменить номер\", \"5. Выход\"]))\n",
        "    option = input(\"\\nВыберите опцию: \")\n",
        "\n",
        "    if not option.isdigit():\n",
        "        continue\n",
        "\n",
        "    if int(option) not in [1, 2, 3, 4, 5]:\n",
        "        continue\n",
        "\n",
        "    if int(option) == 1:\n",
        "      add(input('Введите имя'), input('Введите телефон'))\n",
        "\n",
        "    elif int(option) == 2:\n",
        "      delete_contact(input('Введите имя'))\n",
        "\n",
        "    elif int(option) == 3:\n",
        "      view()\n",
        "\n",
        "    elif int(option) == 4:\n",
        "      edit(input('Введите имя'), input('Введите телефон'))\n",
        "\n",
        "    else:\n",
        "      break\n"
      ]
    }
  ]
}
